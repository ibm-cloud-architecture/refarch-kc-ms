name: Build & push images for 'kc-ms'
on:
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'
      - '*/chart/**'

jobs:
  validate-docker-secrets:
    runs-on: ubuntu-latest
    steps:
    - name: Validate docker registry secrets are defined
      id: validate-docker-secrets
      run: |
        echo "Validating docker registry secrets are defined on the repository"

        FAIL=false

        validate_secret(){
          FIELD=$1
          VALUE=$2

          if [ -z "${VALUE}" ]; then
            echo "The secret ${FIELD} needs to be set on this repository."
            FAIL=true
          else
            echo "The secret ${FIELD} is set on this repository."
          fi
        }

        validate_secret DOCKER_USERNAME ${DOCKER_USERNAME}
        validate_secret DOCKER_PASSWORD ${DOCKER_PASSWORD}
        validate_secret DOCKER_REPOSITORY ${DOCKER_REPOSITORY}
        validate_secret DOCKER_IMAGE_FLEET ${DOCKER_IMAGE_FLEET}
        validate_secret DOCKER_IMAGE_VOYAGES ${DOCKER_IMAGE_VOYAGES}

        if [ "${FAIL}" = "true" ]; then
          exit 1
        fi
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
        DOCKER_IMAGE_FLEET: ${{ secrets.DOCKER_IMAGE_FLEET }}
        DOCKER_IMAGE_VOYAGES: ${{ secrets.DOCKER_IMAGE_VOYAGES }}
  build-docker-images:
    needs:
      validate-docker-secrets
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Bump version and push tag
      id: bump-version-action
      uses: osowski/github-tag-action@master
      env:
        DEFAULT_BUMP: patch
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Build the fleet-ms docker image
      id: build-fleet-image
      run: |
        echo "Build and push the docker image"
        IMAGE_NAME="${DOCKER_R}/${DOCKER_I}"
        docker login -u ${DOCKER_U} -p ${DOCKER_P}
        cd ${WORKDIR}
        docker build . --file ${DOCKERFILE} --tag ${IMAGE_NAME}:${IMAGE_TAG}
        docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:latest
        docker push ${IMAGE_NAME}
      env:
        DOCKER_U: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_P: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_R: ${{ secrets.DOCKER_REPOSITORY }}
        DOCKER_I: ${{ secrets.DOCKER_IMAGE_FLEET }}
        WORKDIR: fleet-ms
        DOCKERFILE: Dockerfile.multistage
        IMAGE_TAG: ${{ steps.bump-version-action.outputs.new_tag }}
    - name: Build the voyages-ms docker image
      id: build-voyages-image
      run: |
        echo "Build and push the docker image"
        IMAGE_NAME="${DOCKER_R}/${DOCKER_I}"
        docker login -u ${DOCKER_U} -p ${DOCKER_P}
        cd ${WORKDIR}
        docker build . --file ${DOCKERFILE} --tag ${IMAGE_NAME}:${IMAGE_TAG}
        docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:latest
        docker push ${IMAGE_NAME}
      env:
        DOCKER_U: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_P: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_R: ${{ secrets.DOCKER_REPOSITORY }}
        DOCKER_I: ${{ secrets.DOCKER_IMAGE_VOYAGES }}
        WORKDIR: voyages-ms
        DOCKERFILE: Dockerfile
        IMAGE_TAG: ${{ steps.bump-version-action.outputs.new_tag }}
    - name: Webhook to GitOps repo
      id: gitops-repo-webhook
      uses: osowski/repository-dispatch@v1
      if: startsWith(github.repository, 'ibm-cloud-architecture/')
      with:
        token: ${{ secrets.WEBHOOK_TOKEN }}
        repository: ibm-cloud-architecture/refarch-kc-gitops
        event-type: gitops-refresh
        client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "source": "${{ github.repository }}"}'
